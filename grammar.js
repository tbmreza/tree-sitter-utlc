///////////////////////////////////////////////////////////////////////////////
//
// Tokens
//
///////////////////////////////////////////////////////////////////////////////
const PAREN_OPEN = "(";
const PAREN_CLOSE = ")";

///////////////////////////////////////////////////////////////////////////////
//
// Precedences
//
///////////////////////////////////////////////////////////////////////////////
// const PREC = {};

///////////////////////////////////////////////////////////////////////////////
//
// Combinators
//
///////////////////////////////////////////////////////////////////////////////
const delim = (open, x, close) => seq(open, x, close);

///////////////////////////////////////////////////////////////////////////////
//
// Grammar
//
///////////////////////////////////////////////////////////////////////////////
module.exports = grammar({
  name: "utlc",

  rules: {
    sexp: ($) => $._sexp,

    // _sexp: ($) => choice($.atom, $.list),
    _sexp: ($) => choice($.datum, $.list),

    atom: _ => /[_@a-zA-Z0-9\xC0-\xD6\xD8-\xDE\xDF-\xF6\xF8-\xFF:-]+/,
    list: ($) => delim(PAREN_OPEN, repeat($._sexp), PAREN_CLOSE),

    datum: ($) => choice(
      $.boolean,
      $.atom,
    ),
    boolean: _ =>
      choice(seq("#", /[tf]/))
  },
});
